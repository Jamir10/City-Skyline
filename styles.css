
:root {
    --building-color1: #aa80ff;
    --building-color2: #66cc99;
    --building-color3: #cc6699;
    --building-color4: #538cc6;
    --window-color1: black;
    /* With CSS variables you can change values without 
    searching everywhere in the stylesheet. Change the 
    --window-color1 value to #bb99ff 
    */
    --window-color2: #8cd9b3;
    --window-color3: #d98cb3;
    --window-color4: #8cb3d9;
}

* {
    /* 
    border: 1px solid black;
    This will show the border of all your elements
    */
    box-sizing: border-box;
} 


body {
    height: 100vh;
    margin: 0;
    overflow: hidden;
}

.background-buildings,
.foreground-buildings {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    display: flex;   
    align-items: flex-end;
    justify-content: space-evenly; 
}

.building-wrap{
    display: flex;
    flex-direction: column;
    align-items: center;
}

.window-wrap {
    display: flex;
    align-items: center;
    justify-content: space-evenly;
}

/* BACKGROUND BUILDINGS - "bb" stands for 
"background building" */

.bb1 {
    width: 10%;
    height: 70%;
    /* display: flex;
    flex-direction: column;
    align-items: center; 
    moved to building wrap
    share properties with bb4 to center the elements
    */
}

.bb1-window {
    height: 10%;
    background: linear-gradient(
        var(--building-color1),
        var(--window-color1)
    );
}

/* Remember that these percentages are relative to the parent 
and note that the heights will add up to 100% - vertically 
filling the container. from bb1*/
.bb1a {
    width: 70%; /* 70% of 100% from bb1 which is 70% of everything (relative)*/
    /*height: 10%; /* 10% of 100% from bb1 which is 10% of everything (relative)*/
    /*background-color: var(--building-color1); it is in .bb1-window */
    /* background: linear-gradient(var(--building-color1),
    var(--window-color1)); */
    /*Gradients in CSS are a way to transition between 
    colors across the distance of an element. They are 
    applied to the background property and the syntax 
    looks like this:

    gradient-type(
    color1,
    color2
    );
    
    OR

    background: linear-gradient(var(--building-color1),
    var(--window-color1));

    In the example, color1 is solid at the top, color2 
    is solid at the bottom, and in between it transitions 
    evenly from one to the next 
    */
}

.bb1b {
    width: 80%;
    /* height: 10%;  
    background-color: var(--building-color1); it is in .bb1-window */
}

.bb1c {
    width: 90%;
    /* height: 10%;  
    background-color: var(--building-color1); it is in .bb1-window */
}

.bb1d {
    width: 100%;
    height: 70%;
    /* background-color: var(--building-color1); */
    background: linear-gradient(
        /* orange, you can make it to 3 colors, including this one */
        var(--building-color1) 50%, /* 50% where you want a gradient transition to complete */
        var(--window-color1)
    );
}

.bb2 {
    width: 10%;
    height: 50%;
    /* background-color: var(--building-color2); removed, we set the background in bb2b as repeating linear gradient */
}

/* Body of building2 */
.bb2b { 
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
    var(--building-color2) 0%,
    var(--building-color2) 6%,
    var(--window-color2) 6%,
    var(--window-color2) 9%
    );
    /* Gradient transitions often gradually change from 
    one color to another. You can make the change a 
    solid line like this: 
    linear-gradient(
        var(--first-color) 0%,
        var(--first-color) 40%,
        var(--second-color) 40%,
        var(--second-color) 80%
    );
    make "repeating-linear-gradient" type for repeating the process
    */
}

/* Tip of building 2 */
.bb2a {
    /* margin: auto;
    border-top: 1vw solid #000; */
    border-bottom: 5vh solid var(--building-color2);
    border-left: 5vw solid transparent;
    border-right: 5vw solid transparent;
}

.bb3 {
    width: 10%;
    height: 55%;
    /* background-color: var(--building-color3); */
    background: repeating-linear-gradient(
        90deg,  /* You can specify another direction by adding it before your colors*/
        var(--building-color3),
        var(--building-color3),
        var(--window-color3) 15%
        /* When you don't specify a distance for a color, 
        it will use the values that makes sense. In this 
        case, the first two colors will default to 0% and 
        7.5% because it starts at 0%, and 7.5% is half of 
        the 15%. 
        */
    );
}

.bb4 {
    width: 11%;
    height: 58%;
}

.bb4-window {
    width: 18%;
    height: 90%;
    background-color: var(--window-color4);
}

.bb4a {
    width: 3%;
    height: 10%;
    background-color: var(--building-color4);
}

.bb4b {
    width: 80%;
    height: 5%;
    background-color: var(--building-color4);
}

.bb4c {
    width: 100%;
    height: 85%;
    background-color: var(--building-color4);
}

/* FOREGROUND BUILDINGS - "fb" stands for "foreground 
building" */

.fb1 {
    width: 10%;
    height: 60%; 
}

.fb1a {
    border-bottom: 7vh solid var(--building-color4);
    border-right: 2vw solid transparent;
    border-left: 2vw solid transparent;   
}

.fb1b {
    width: 60%;
    height: 10%;
    background-color: var(--building-color4); 
}

.fb1c {
    width: 100%;
    height: 80%;
    background: repeating-linear-gradient(
      90deg,
      var(--building-color4),
      var(--building-color4) 10%,
      transparent 10%,
      transparent 15%
    ), repeating-linear-gradient(
        var(--building-color4),
        var(--building-color4) 10%,
        var(--window-color4) 10%,
        var(--window-color4) 90%
    );  /* This covers the gap, the transparency top-bottom*/
}

.fb2 {
    width: 10%;
    height: 40%;
}

.fb2-window {
    width: 22%;
    height: 100%;
    background-color: var(--window-color3);
}

.fb2a {
    width: 100%; 
    border-bottom: 10vh solid var(--building-color3);
    border-left: 1vw solid transparent;
    border-right: 1vw solid transparent;
}

.fb2b {
    width: 100%;
    height: 75%;
    background-color: var(--building-color3);
}

.fb3 {
    width: 10%;
    height: 35%;
    
}

.fb3-window {
    width: 25%;
    height: 80%;
    background-color: var(--window-color1);
}

.fb3a {
    width: 80%;
    height: 15%;
    background-color: var(--building-color1);
}

.fb3b {
    width: 100%;
    height: 35%;
    background-color: var(--building-color1);
}

.fb4 {
    width: 8%;
    height: 45%;
    position: relative;
    left: 10%;
}

.fb4-window {
    width: 30%;
    height: 10%;
    border-radius: 50%;
    background-color: var(--window-color1);
    margin: 10%; /* to give the windows some space */
}

.fb4a {
    border-top: 5vh solid transparent;
    border-left: 8vw solid var(--building-color1); 
}

.fb4b {
    width: 100%;
    height: 89%;
    background-color: var(--building-color1);
    display: flex;
    flex-wrap: wrap;
    /* Add display: flex and flex-wrap: wrap to the 
    window container. This will put your windows side
    by side, and then push them down to a new row when 
    they don't fit. 
    */    
}

.fb5 {
    width: 10%;
    height: 33%;
    position: relative;
    right: 10%;
    background: repeating-linear-gradient(
        var(--building-color2),
        var(--building-color2) 5%,
        transparent 5%,
        transparent 10%
    ), repeating-linear-gradient(
        90deg,
        var(--building-color2),
        var(--building-color2) 12%,
        var(--window-color2) 12%,
        var(--window-color2) 44%
    );
}

.fb6 {
    width: 9%;
    height: 38%;
    background: repeating-linear-gradient(
        90deg,
        var(--building-color3),
        var(--building-color3) 10%,
        transparent 10%,
        transparent 30%
    ), repeating-linear-gradient(
        var(--building-color3),
        var(--building-color3) 10%,
        var(--window-color3) 10%,
        var(--window-color3) 30%
    );
}